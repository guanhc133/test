<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:bean="http://www.springframework.org/schema/beans"
       xmlns="http://www.springframework.org/schema/beans" xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <aop:aspectj-autoproxy proxy-target-class="true" />

    <tx:annotation-driven/>

    <!-- 配置数据源，从上面配置文件读取
    driverClassName:数据库驱动类
     defaultAutoCommit：设置从数据源中返回的连接是否采用自动提交机制，默认值为 true；
    defaultReadOnly：设置数据源是否仅能执行只读操作， 默认值为 false；
    maxActive：最大连接数据库连接数，设置为0时，表示没有限制；
    maxIdle：最大等待连接中的数量，设置为0时，表示没有限制；
    maxWait：最大等待秒数，单位为毫秒， 超过时间会报出错误信息；
    validationQuery：用于验证连接是否成功的查询SQL语句，SQL语句必须至少要返回一行数据， 如你可以简单地设置为：“select count(*) from web”；
    removeAbandoned：是否自我中断，默认是 false ；
    removeAbandonedTimeout：几秒后数据连接会自动断开，在removeAbandoned为true，提供该值；
    logAbandoned：是否记录中断事件， 默认为 false；
     -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--<property name="initialSize" value="${jdbc.initialSize}"/>-->
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
        <property name="timeBetweenEvictionRunsMillis" value="30"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <property name="testWhileIdle" value="true"/>
    </bean>

    <bean id="aspect" class="com.finance.test.msg.send.userForTest.Aspect"/>

    <aop:config>
        <aop:aspect id="jobAspect" ref="aspect">
            <!-- 配置指定切入的对象 -->
            <aop:pointcut id="point_cut" expression="execution(* com.finance.test.msg.send.userForTest.*.*(..))"/>
            <!-- 前置通知 -->
            <aop:before method="before" pointcut-ref="point_cut"/>
            <aop:after method="after" pointcut-ref="point_cut"/>
        </aop:aspect>
    </aop:config>


    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:/spring/mybatis.xml"/>
        <property name="mapperLocations">
            <list>
                <value>classpath:mapper/*Mapper.xml</value>
            </list>
        </property>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>dialect=mysql</value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 自动扫描和注册Mapper接口 basePackage是用来指定Mapper接口文件所在的基包， 在这个基包或其所有子包下面的Mapper接口都将被搜索到。
        多个基包之间可以使用逗号或者分号进行分隔 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"
                  value="com.finance.test.msg.send.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 声明使用注解式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>